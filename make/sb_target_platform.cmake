function(sb_setup_target_platform)
    
    if(((${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i386") AND (CMAKE_SIZEOF_VOID_P EQUAL 8)) OR
        (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64") OR 
        (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "AMD64"))
        set(SB_TARGET_CPU_ARCH_ID "64" PARENT_SCOPE)
        set(SB_TARGET_CPU_FAMILY_NAME "x86" PARENT_SCOPE)
        set(SB_TARGET_CPU_ID "x86_64" PARENT_SCOPE)
        set(SB_TARGET_CPU_ARCH_64B TRUE PARENT_SCOPE)
    else()
        message(FATAL_ERROR "Unsupported CPU: ${CMAKE_SYSTEM_PROCESSOR}-${CMAKE_SIZEOF_VOID_P}")
    endif()

    if(${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
        set(SB_TARGET_PLATFORM_ID "macos" PARENT_SCOPE)
        set(SB_TARGET_PLATFORM_FAMILY_ID "unix" PARENT_SCOPE)
        set(SB_TARGET_PLATFORM_FILE_SUFFIX "macos" PARENT_SCOPE) 
    elseif(${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
        set(SB_TARGET_PLATFORM_ID "linux" PARENT_SCOPE)	
        set(SB_TARGET_PLATFORM_FAMILY_ID "unix" PARENT_SCOPE)
        set(SB_TARGET_PLATFORM_FILE_SUFFIX "linux" PARENT_SCOPE) 
    elseif(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
        set(SB_TARGET_PLATFORM_ID "windows" PARENT_SCOPE)	
        set(SB_TARGET_PLATFORM_FAMILY_ID "windows" PARENT_SCOPE)
        set(SB_TARGET_PLATFORM_FILE_SUFFIX "win" PARENT_SCOPE) 
    else()
        message(FATAL_ERROR "Unknown target: ${CMAKE_SYSTEM_NAME}")
    endif()

    set(SB_TARGET_FULL_ID ${SB_TARGET_PLATFORM_ID}_${SB_TARGET_CPU_ID} PARENT_SCOPE)
    set(SB_3RD_LIB_DIR_PATH "${SB_SRC_3RD_LIB_DIR_PATH}/${SB_TARGET_FULL_ID}" PARENT_SCOPE)
    set(SB_3RD_BIN_DIR_PATH "${SB_SRC_3RD_BIN_DIR_PATH}/${SB_TARGET_FULL_ID}" PARENT_SCOPE)

endfunction()